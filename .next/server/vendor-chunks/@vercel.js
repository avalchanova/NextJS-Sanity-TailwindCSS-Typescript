"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@vercel";
exports.ids = ["vendor-chunks/@vercel"];
exports.modules = {

/***/ "(rsc)/./node_modules/@vercel/stega/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@vercel/stega/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar s = {\n    0: 8203,\n    1: 8204,\n    2: 8205,\n    3: 8290,\n    4: 8291,\n    5: 8288,\n    6: 65279,\n    7: 8289,\n    8: 119155,\n    9: 119156,\n    a: 119157,\n    b: 119158,\n    c: 119159,\n    d: 119160,\n    e: 119161,\n    f: 119162\n}, c = {\n    0: 8203,\n    1: 8204,\n    2: 8205,\n    3: 65279\n}, d = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"), m = String.fromCharCode(0);\nfunction E(t) {\n    let e = JSON.stringify(t);\n    return `${d}${Array.from(e).map((r)=>{\n        let n = r.charCodeAt(0);\n        if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n        return Array.from(n.toString(4).padStart(4, \"0\")).map((o)=>String.fromCodePoint(c[o])).join(\"\");\n    }).join(\"\")}`;\n}\nfunction P(t) {\n    let e = JSON.stringify(t);\n    return Array.from(e).map((r)=>{\n        let n = r.charCodeAt(0);\n        if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n        return Array.from(n.toString(16).padStart(2, \"0\")).map((o)=>String.fromCodePoint(s[o])).join(\"\");\n    }).join(\"\");\n}\nfunction I(t) {\n    return Number.isNaN(Number(t)) ? Boolean(Date.parse(t)) : !1;\n}\nfunction x(t) {\n    try {\n        new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n    } catch (e2) {\n        return !1;\n    }\n    return !0;\n}\nfunction b(t, e, r = \"auto\") {\n    return r === !0 || r === \"auto\" && (I(t) || x(t)) ? t : `${t}${E(e)}`;\n}\nvar A = Object.fromEntries(Object.entries(c).map((t)=>t.reverse())), g = Object.fromEntries(Object.entries(s).map((t)=>t.reverse())), S = `${Object.values(s).map((t)=>`\\\\u{${t.toString(16)}}`).join(\"\")}`, f = exports.VERCEL_STEGA_REGEX = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction R(t) {\n    let e = t.match(f);\n    if (!!e) return h(e[0], !0)[0];\n}\nfunction G(t) {\n    let e = t.match(f);\n    if (!!e) return e.map((r)=>h(r)).flat();\n}\nfunction h(t, e = !1) {\n    let r = Array.from(t);\n    if (r.length % 2 === 0) {\n        if (r.length % 4 || !t.startsWith(d)) return T(r, e);\n    } else throw new Error(\"Encoded data has invalid length\");\n    let n = [];\n    for(let o = r.length * .25; o--;){\n        let p = r.slice(o * 4, o * 4 + 4).map((u)=>A[u.codePointAt(0)]).join(\"\");\n        n.unshift(String.fromCharCode(parseInt(p, 4)));\n    }\n    if (e) {\n        n.shift();\n        let o = n.indexOf(m);\n        return o === -1 && (o = n.length), [\n            JSON.parse(n.slice(0, o).join(\"\"))\n        ];\n    }\n    return n.join(\"\").split(m).filter(Boolean).map((o)=>JSON.parse(o));\n}\nfunction T(t, e) {\n    var u;\n    let r = [];\n    for(let i = t.length * .5; i--;){\n        let a = `${g[t[i * 2].codePointAt(0)]}${g[t[i * 2 + 1].codePointAt(0)]}`;\n        r.unshift(String.fromCharCode(parseInt(a, 16)));\n    }\n    let n = [], o = [\n        r.join(\"\")\n    ], p = 10;\n    for(; o.length;){\n        let i = o.shift();\n        try {\n            if (n.push(JSON.parse(i)), e) return n;\n        } catch (a) {\n            if (!p--) throw a;\n            let l = +((u = a.message.match(/\\sposition\\s(\\d+)$/)) == null ? void 0 : u[1]);\n            if (!l) throw a;\n            o.unshift(i.substring(0, l), i.substring(l));\n        }\n    }\n    return n;\n}\nfunction X(t) {\n    var e;\n    return {\n        cleaned: t.replace(f, \"\"),\n        encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\"\n    };\n}\nexports.VERCEL_STEGA_REGEX = f;\nexports.legacyStegaEncode = P;\nexports.vercelStegaCombine = b;\nexports.vercelStegaDecode = R;\nexports.vercelStegaDecodeAll = G;\nexports.vercelStegaEncode = E;\nexports.vercelStegaSplit = X;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@vercel/stega/dist/index.js\n");

/***/ })

};
;